{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project_3\\\\Game-of-Chance\\\\game-of-chance\\\\src\\\\components\\\\forms\\\\LoginForm.js\";\nimport React from \"react\";\nimport { Form, Button } from \"semantic-ui-react\";\nimport Validator from \"validator\";\nimport InlineError from '../messages/InlineError';\n\nclass LoginForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: {\n        email: '',\n        password: ''\n      },\n      loading: false,\n      errors: {}\n    };\n\n    this.onChange = e => this.setState({\n      data: { ...this.state.data,\n        [e.target.name]: e.target.value\n      }\n    });\n\n    this.onSubmit = () => {\n      const errors = this.validate(this.state.data);\n      this.setState({\n        errors\n      });\n    };\n\n    this.validate = data => {\n      const errors = {};\n      if (!Validator.isEmail(data.email)) errors.email = \"Invalid email!\";\n      if (!data.password) errors.password = \"Oh no! Please create a password.\";\n      return errors;\n    };\n  }\n\n  render() {\n    const {\n      data,\n      errors\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Field, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"email\",\n      id: \"email\",\n      placeholder: \"JohnSmith@example.com\",\n      value: data.email,\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }\n    }), errors.email && /*#__PURE__*/React.createElement(InlineError, {\n      text: error.email,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 38\n      }\n    })), /*#__PURE__*/React.createElement(Form.Field, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      id: \"password\",\n      placeholder: \"Password\",\n      value: data.password,\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }\n    }), errors.password && /*#__PURE__*/React.createElement(InlineError, {\n      text: errors.password,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      primary: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, \"Login\"));\n  }\n\n}\n\nexport default LoginForm;","map":{"version":3,"sources":["D:/Project_3/Game-of-Chance/game-of-chance/src/components/forms/LoginForm.js"],"names":["React","Form","Button","Validator","InlineError","LoginForm","Component","state","data","email","password","loading","errors","onChange","e","setState","target","name","value","onSubmit","validate","isEmail","render","error"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Form, Button } from \"semantic-ui-react\";\r\nimport Validator from \"validator\";\r\nimport InlineError from '../messages/InlineError';\r\n\r\nclass LoginForm extends React.Component {\r\n    state = {\r\n        data: {\r\n            email: '',\r\n            password: ''\r\n        },\r\n        loading: false,\r\n        errors: {},\r\n    };\r\n\r\n    //onChange Event\r\n    onChange = e => this.setState({data: {...this.state.data, [e.target.name]: e.target.value}\r\n    });\r\n\r\n\r\n    onSubmit = () => {\r\n        const errors =this.validate(this.state.data);\r\n        this.setState({errors});\r\n    };\r\n\r\n    //Validation\r\n    validate = (data) => {\r\n        const errors ={};\r\n        if (!Validator.isEmail(data.email)) errors.email = \"Invalid email!\";\r\n        if  (!data.password) errors.password = \"Oh no! Please create a password.\";\r\n        return errors;\r\n    }\r\n\r\n    render() {\r\n        const {data, errors} = this.state;\r\n\r\n        return (\r\n            <Form onSubmit={this.onSubmit}>\r\n                <Form.Field>\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input\r\n                        type=\"email\"\r\n                        id=\"email\"\r\n                        placeholder=\"JohnSmith@example.com\"\r\n                        value={data.email}\r\n                        onChange={this.onChange}\r\n                    />\r\n                    {errors.email && <InlineError text={error.email} />}\r\n                </Form.Field>\r\n                <Form.Field>\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        placeholder=\"Password\"\r\n                        value={data.password}\r\n                        onChange={this.onChange}\r\n                    />\r\n                    {errors.password && <InlineError text={errors.password} />}\r\n                </Form.Field>\r\n                <Button primary>Login</Button>\r\n            </Form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LoginForm;"]},"metadata":{},"sourceType":"module"}